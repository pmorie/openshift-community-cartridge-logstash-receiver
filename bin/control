#!/bin/bash -eu

LOGSTASH_PID_FILE="/tmp/logstash.pid"
cartridge_type="logstash"
version=1.1

function start {
  echo "Starting $cartridge_type cart"

  # Check for running app
  if isrunning; then
      echo "Application is already running"
  else
        java -jar $OPENSHIFT_LOGSTASH_DIR/usr/logstash-1.2.*-flatjar.jar agent -f $OPENSHIFT_LOGSTASH_DIR/conf/logstash-receiver.conf 2>&1 > $OPENSHIFT_LOGSTASH_DIR/logs/logstash.out &
    	PROCESS_ID=$!
    echo $PROCESS_ID > $LOGSTASH_PID_FILE
  fi
}

isrunning() {
  # Check for running app
  if [ -f "$LOGSTASH_PID_FILE" ]; then
    pid=$(cat $LOGSTASH_PID_FILE);
    running=`/bin/ps --no-headers --pid $pid`
    if test -n "$running";
    then
      return 0
    fi
  fi
  # not running
  return 1
}

function stop {
  echo "Stopping $cartridge_type cart"
 
  if isrunning; then
    if [ -f "$LOGSTASH_PID_FILE" ]; then
      pid=$(cat $LOGSTASH_PID_FILE);
      echo "Sending SIGTERM to logstash:$pid ..." 1>&2
      killtree $pid
    else
      echo "Failed to locate LOGSTASH PID File" 1>&2
    fi
  fi
}

function restart {
  stop
  start
}

function status {
   if isrunning
   then
      echo "Application is running"
   else
      echo "Application is either stopped or inaccessible"
   fi
}

function catchall {
    echo "not yet implemented"
}

case "$1" in
  start)         start ;;
  stop)          stop ;;
  restart)       restart ;;
  status)        status ;;
  reload)        catchall ;;
  tidy)          catchall ;;
  pre-build)     catchall ;;
  build)         catchall ;;
  deploy)        catchall ;;
  post-deploy)   catchall ;;
  *)             exit 0
esac

exit 0
